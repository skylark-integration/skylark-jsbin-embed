{"version":3,"sources":["init.js"],"names":["define","embeds","embed","scoop","inview","loadRealEmbed","docElem","document","documentElement","readLinks","links","alllinks","length","i","getElementsByTagName","className","indexOf","push","getLinks","replace","checkForPending","todo","pending","unshift","iframe","splice","init","id","handler","cancelAnimationFrame","requestAnimationFrame","addEventListener","window"],"mappings":";;;;;;;AAAAA,QACE,WACA,UACA,UACA,WACA,mBACA,SAASC,EAAOC,EAAMC,EAAMC,EAAOC,GACnC,aAEA,IAAIC,EAAUC,UAAYA,SAASC,gBAiBnC,SAASC,IAMP,IALA,IAAIC,EAfN,WACE,IAAgBC,EAAiBC,EAA7BF,KAAsBG,EAAI,EAG9B,IADAD,GADAD,EAAWJ,SAASO,qBAAqB,MACvBF,OACXC,EAAID,EAAQC,KACyC,KAArD,IAAMF,EAASE,GAAGE,WAAWC,QAAQ,YACxCN,EAAMO,KAAKN,EAASE,IAIxB,OAAOH,EAKKQ,GACRL,EAAI,EACJD,EAASF,EAAME,OACfG,EAAY,GAETF,EAAID,EAAQC,KAE2B,KAD5CE,EAAY,IAAML,EAAMG,GAAGE,UAAY,KACzBC,QAAQ,iBACpBb,EAAMO,EAAMG,KACqC,IAAxCE,EAAUC,QAAQ,mBAC3BN,EAAMG,GAAGE,UAAYL,EAAMG,GAAGE,UAAUI,QAAQ,eAAgB,IAChEjB,EAAMQ,EAAMG,KAKlB,SAASO,IACP,IAAIP,EAAI,EACJQ,KACJ,IAAKR,EAAI,EAAGA,EAAIS,EAAQV,OAAQC,IAC1BT,EAAOkB,EAAQT,GAAI,MACrBQ,EAAKE,SAAUC,OAAQF,EAAQT,GAAIA,EAAGA,IAI1C,IAAKA,EAAI,EAAGA,EAAIQ,EAAKT,OAAQC,IAC3BS,EAAQG,OAAOJ,EAAKR,GAAGA,EAAG,GAC1BR,EAAcgB,EAAKR,GAAGW,QAI1B,IAAIF,KAqBJ,OAAOrB,EAAOyB,KAfd,WACEjB,IACA,IAAIkB,EAAK,KACT,SAASC,IACHN,EAAQV,SACViB,qBAAqBF,GACrBA,EAAKG,sBAAsBV,IAK/Bd,EAAQyB,iBAAiB,SAAUH,GAAS,GAC5CI,OAAOD,iBAAiB,SAAUH,GAAS","file":"../init.js","sourcesContent":["define([\r\n  \"./embeds\",\r\n  \"./embed\",\r\n  \"./scoop\",\r\n  \"./inview\",\r\n  \"./loadRealEmbed\"\r\n],function(embeds,embed,scoop,inview,loadRealEmbed){\r\n  'use strict';\r\n\r\n  var docElem = document && document.documentElement;\r\n\r\n  // 1. find all links with class=jsbin\r\n  function getLinks() {\r\n    var links = [], alllinks, i = 0, length;\r\n    alllinks = document.getElementsByTagName('a');\r\n    length = alllinks.length;\r\n    for (; i < length; i++) {\r\n      if ((' ' + alllinks[i].className).indexOf(' jsbin-') !== -1) {\r\n        links.push(alllinks[i]);\r\n      }\r\n    }\r\n\r\n    return links;\r\n  }\r\n\r\n\r\n  function readLinks() {\r\n    var links = getLinks(),\r\n        i = 0,\r\n        length = links.length,\r\n        className = '';\r\n\r\n    for (; i < length; i++) {\r\n      className = ' ' + links[i].className + ' ';\r\n      if (className.indexOf(' jsbin-scoop ') !== -1) {\r\n        scoop(links[i]);\r\n      } else if (className.indexOf(' jsbin-embed ') !== -1) {\r\n        links[i].className = links[i].className.replace(/jsbin\\-embed/, '');\r\n        embed(links[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkForPending() {\r\n    var i = 0;\r\n    var todo = [];\r\n    for (i = 0; i < pending.length; i++) {\r\n      if (inview(pending[i], 400)) {\r\n        todo.unshift({ iframe: pending[i], i: i });\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < todo.length; i++) {\r\n      pending.splice(todo[i].i, 1);\r\n      loadRealEmbed(todo[i].iframe);\r\n    }\r\n  }\r\n\r\n  var pending = [];\r\n\r\n  // this supports early embeding - probably only applies to Google's slides.js\r\n  //readLinks();\r\n\r\n  // try to read more links once the DOM is done\r\n  function init () {\r\n    readLinks();\r\n    var id = null;\r\n    function handler() {\r\n      if (pending.length) {\r\n        cancelAnimationFrame(id);\r\n        id = requestAnimationFrame(checkForPending);\r\n      } else {\r\n        // detatch the scroll handler\r\n      }\r\n    }\r\n    docElem.addEventListener('scroll', handler, true);\r\n    window.addEventListener('scroll', handler, true);\r\n  }\r\n\r\n  return embeds.init = init;\r\n\r\n});"]}